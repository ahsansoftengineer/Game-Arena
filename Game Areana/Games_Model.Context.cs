//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Game_Areana
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Games_Arena_DB_Context : DbContext
    {
        public Games_Arena_DB_Context()
            : base("name=Games_Arena_DB_Context")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Game_Images> Game_Images { get; set; }
        public DbSet<Game> Games { get; set; }
        public DbSet<ResetPasswordRequest> ResetPasswordRequests { get; set; }
        public DbSet<Specification> Specifications { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<Specifications_Technical> Specifications_Technical { get; set; }
    
        public virtual int Delete_Games(Nullable<int> game_ID)
        {
            var game_IDParameter = game_ID.HasValue ?
                new ObjectParameter("Game_ID", game_ID) :
                new ObjectParameter("Game_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Games", game_IDParameter);
        }
    
        public virtual int Delete_Specifications(Nullable<int> specification_ID)
        {
            var specification_IDParameter = specification_ID.HasValue ?
                new ObjectParameter("Specification_ID", specification_ID) :
                new ObjectParameter("Specification_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Specifications", specification_IDParameter);
        }
    
        public virtual int Insert_Games(string game_Full_Name, string game_Short_Name, Nullable<System.DateTime> release_Date, string company, Nullable<System.DateTime> upload_Date, Nullable<int> min_Spc_ID, Nullable<int> rec_Spc_ID, string game_Type, string primary_Comment, string warnings, string developer_Comment_1, string developer_Comment_2)
        {
            var game_Full_NameParameter = game_Full_Name != null ?
                new ObjectParameter("Game_Full_Name", game_Full_Name) :
                new ObjectParameter("Game_Full_Name", typeof(string));
    
            var game_Short_NameParameter = game_Short_Name != null ?
                new ObjectParameter("Game_Short_Name", game_Short_Name) :
                new ObjectParameter("Game_Short_Name", typeof(string));
    
            var release_DateParameter = release_Date.HasValue ?
                new ObjectParameter("Release_Date", release_Date) :
                new ObjectParameter("Release_Date", typeof(System.DateTime));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var min_Spc_IDParameter = min_Spc_ID.HasValue ?
                new ObjectParameter("Min_Spc_ID", min_Spc_ID) :
                new ObjectParameter("Min_Spc_ID", typeof(int));
    
            var rec_Spc_IDParameter = rec_Spc_ID.HasValue ?
                new ObjectParameter("Rec_Spc_ID", rec_Spc_ID) :
                new ObjectParameter("Rec_Spc_ID", typeof(int));
    
            var game_TypeParameter = game_Type != null ?
                new ObjectParameter("Game_Type", game_Type) :
                new ObjectParameter("Game_Type", typeof(string));
    
            var primary_CommentParameter = primary_Comment != null ?
                new ObjectParameter("Primary_Comment", primary_Comment) :
                new ObjectParameter("Primary_Comment", typeof(string));
    
            var warningsParameter = warnings != null ?
                new ObjectParameter("Warnings", warnings) :
                new ObjectParameter("Warnings", typeof(string));
    
            var developer_Comment_1Parameter = developer_Comment_1 != null ?
                new ObjectParameter("Developer_Comment_1", developer_Comment_1) :
                new ObjectParameter("Developer_Comment_1", typeof(string));
    
            var developer_Comment_2Parameter = developer_Comment_2 != null ?
                new ObjectParameter("Developer_Comment_2", developer_Comment_2) :
                new ObjectParameter("Developer_Comment_2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Games", game_Full_NameParameter, game_Short_NameParameter, release_DateParameter, companyParameter, upload_DateParameter, min_Spc_IDParameter, rec_Spc_IDParameter, game_TypeParameter, primary_CommentParameter, warningsParameter, developer_Comment_1Parameter, developer_Comment_2Parameter);
        }
    
        public virtual int Insert_Specifications(Nullable<int> specification_ID, string oS, string processor, string memory, string graphics, string directX, string storage, string sound_Card)
        {
            var specification_IDParameter = specification_ID.HasValue ?
                new ObjectParameter("Specification_ID", specification_ID) :
                new ObjectParameter("Specification_ID", typeof(int));
    
            var oSParameter = oS != null ?
                new ObjectParameter("OS", oS) :
                new ObjectParameter("OS", typeof(string));
    
            var processorParameter = processor != null ?
                new ObjectParameter("Processor", processor) :
                new ObjectParameter("Processor", typeof(string));
    
            var memoryParameter = memory != null ?
                new ObjectParameter("Memory", memory) :
                new ObjectParameter("Memory", typeof(string));
    
            var graphicsParameter = graphics != null ?
                new ObjectParameter("Graphics", graphics) :
                new ObjectParameter("Graphics", typeof(string));
    
            var directXParameter = directX != null ?
                new ObjectParameter("DirectX", directX) :
                new ObjectParameter("DirectX", typeof(string));
    
            var storageParameter = storage != null ?
                new ObjectParameter("Storage", storage) :
                new ObjectParameter("Storage", typeof(string));
    
            var sound_CardParameter = sound_Card != null ?
                new ObjectParameter("Sound_Card", sound_Card) :
                new ObjectParameter("Sound_Card", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Specifications", specification_IDParameter, oSParameter, processorParameter, memoryParameter, graphicsParameter, directXParameter, storageParameter, sound_CardParameter);
        }
    
        public virtual int Update_Game_Images(Nullable<int> game_ID, byte[] large_Image_1, byte[] large_Image_2, byte[] large_Image_3, byte[] large_Image_4, byte[] small_Image)
        {
            var game_IDParameter = game_ID.HasValue ?
                new ObjectParameter("Game_ID", game_ID) :
                new ObjectParameter("Game_ID", typeof(int));
    
            var large_Image_1Parameter = large_Image_1 != null ?
                new ObjectParameter("Large_Image_1", large_Image_1) :
                new ObjectParameter("Large_Image_1", typeof(byte[]));
    
            var large_Image_2Parameter = large_Image_2 != null ?
                new ObjectParameter("Large_Image_2", large_Image_2) :
                new ObjectParameter("Large_Image_2", typeof(byte[]));
    
            var large_Image_3Parameter = large_Image_3 != null ?
                new ObjectParameter("Large_Image_3", large_Image_3) :
                new ObjectParameter("Large_Image_3", typeof(byte[]));
    
            var large_Image_4Parameter = large_Image_4 != null ?
                new ObjectParameter("Large_Image_4", large_Image_4) :
                new ObjectParameter("Large_Image_4", typeof(byte[]));
    
            var small_ImageParameter = small_Image != null ?
                new ObjectParameter("Small_Image", small_Image) :
                new ObjectParameter("Small_Image", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Game_Images", game_IDParameter, large_Image_1Parameter, large_Image_2Parameter, large_Image_3Parameter, large_Image_4Parameter, small_ImageParameter);
        }
    
        public virtual int Update_Games(Nullable<int> game_ID, string game_Full_Name, string game_Short_Name, Nullable<System.DateTime> release_Date, string company, Nullable<System.DateTime> upload_Date, Nullable<int> min_Spc_ID, Nullable<int> rec_Spc_ID, string game_Type, string primary_Comment, string warnings, string developer_Comment_1, string developer_Comment_2)
        {
            var game_IDParameter = game_ID.HasValue ?
                new ObjectParameter("Game_ID", game_ID) :
                new ObjectParameter("Game_ID", typeof(int));
    
            var game_Full_NameParameter = game_Full_Name != null ?
                new ObjectParameter("Game_Full_Name", game_Full_Name) :
                new ObjectParameter("Game_Full_Name", typeof(string));
    
            var game_Short_NameParameter = game_Short_Name != null ?
                new ObjectParameter("Game_Short_Name", game_Short_Name) :
                new ObjectParameter("Game_Short_Name", typeof(string));
    
            var release_DateParameter = release_Date.HasValue ?
                new ObjectParameter("Release_Date", release_Date) :
                new ObjectParameter("Release_Date", typeof(System.DateTime));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var min_Spc_IDParameter = min_Spc_ID.HasValue ?
                new ObjectParameter("Min_Spc_ID", min_Spc_ID) :
                new ObjectParameter("Min_Spc_ID", typeof(int));
    
            var rec_Spc_IDParameter = rec_Spc_ID.HasValue ?
                new ObjectParameter("Rec_Spc_ID", rec_Spc_ID) :
                new ObjectParameter("Rec_Spc_ID", typeof(int));
    
            var game_TypeParameter = game_Type != null ?
                new ObjectParameter("Game_Type", game_Type) :
                new ObjectParameter("Game_Type", typeof(string));
    
            var primary_CommentParameter = primary_Comment != null ?
                new ObjectParameter("Primary_Comment", primary_Comment) :
                new ObjectParameter("Primary_Comment", typeof(string));
    
            var warningsParameter = warnings != null ?
                new ObjectParameter("Warnings", warnings) :
                new ObjectParameter("Warnings", typeof(string));
    
            var developer_Comment_1Parameter = developer_Comment_1 != null ?
                new ObjectParameter("Developer_Comment_1", developer_Comment_1) :
                new ObjectParameter("Developer_Comment_1", typeof(string));
    
            var developer_Comment_2Parameter = developer_Comment_2 != null ?
                new ObjectParameter("Developer_Comment_2", developer_Comment_2) :
                new ObjectParameter("Developer_Comment_2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Games", game_IDParameter, game_Full_NameParameter, game_Short_NameParameter, release_DateParameter, companyParameter, upload_DateParameter, min_Spc_IDParameter, rec_Spc_IDParameter, game_TypeParameter, primary_CommentParameter, warningsParameter, developer_Comment_1Parameter, developer_Comment_2Parameter);
        }
    
        public virtual int Update_Specifications(Nullable<int> specification_ID, string oS, string processor, string memory, string graphics, string directX, string storage, string sound_Card)
        {
            var specification_IDParameter = specification_ID.HasValue ?
                new ObjectParameter("Specification_ID", specification_ID) :
                new ObjectParameter("Specification_ID", typeof(int));
    
            var oSParameter = oS != null ?
                new ObjectParameter("OS", oS) :
                new ObjectParameter("OS", typeof(string));
    
            var processorParameter = processor != null ?
                new ObjectParameter("Processor", processor) :
                new ObjectParameter("Processor", typeof(string));
    
            var memoryParameter = memory != null ?
                new ObjectParameter("Memory", memory) :
                new ObjectParameter("Memory", typeof(string));
    
            var graphicsParameter = graphics != null ?
                new ObjectParameter("Graphics", graphics) :
                new ObjectParameter("Graphics", typeof(string));
    
            var directXParameter = directX != null ?
                new ObjectParameter("DirectX", directX) :
                new ObjectParameter("DirectX", typeof(string));
    
            var storageParameter = storage != null ?
                new ObjectParameter("Storage", storage) :
                new ObjectParameter("Storage", typeof(string));
    
            var sound_CardParameter = sound_Card != null ?
                new ObjectParameter("Sound_Card", sound_Card) :
                new ObjectParameter("Sound_Card", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Specifications", specification_IDParameter, oSParameter, processorParameter, memoryParameter, graphicsParameter, directXParameter, storageParameter, sound_CardParameter);
        }
    
        public virtual int Update_Specifications_Technical(Nullable<int> game_ID, string game_Version, string interface_Language, string audio_Language, string uploader, string game_File_Name, string game_Download_Size, string mDSSUM)
        {
            var game_IDParameter = game_ID.HasValue ?
                new ObjectParameter("Game_ID", game_ID) :
                new ObjectParameter("Game_ID", typeof(int));
    
            var game_VersionParameter = game_Version != null ?
                new ObjectParameter("Game_Version", game_Version) :
                new ObjectParameter("Game_Version", typeof(string));
    
            var interface_LanguageParameter = interface_Language != null ?
                new ObjectParameter("Interface_Language", interface_Language) :
                new ObjectParameter("Interface_Language", typeof(string));
    
            var audio_LanguageParameter = audio_Language != null ?
                new ObjectParameter("Audio_Language", audio_Language) :
                new ObjectParameter("Audio_Language", typeof(string));
    
            var uploaderParameter = uploader != null ?
                new ObjectParameter("Uploader", uploader) :
                new ObjectParameter("Uploader", typeof(string));
    
            var game_File_NameParameter = game_File_Name != null ?
                new ObjectParameter("Game_File_Name", game_File_Name) :
                new ObjectParameter("Game_File_Name", typeof(string));
    
            var game_Download_SizeParameter = game_Download_Size != null ?
                new ObjectParameter("Game_Download_Size", game_Download_Size) :
                new ObjectParameter("Game_Download_Size", typeof(string));
    
            var mDSSUMParameter = mDSSUM != null ?
                new ObjectParameter("MDSSUM", mDSSUM) :
                new ObjectParameter("MDSSUM", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Specifications_Technical", game_IDParameter, game_VersionParameter, interface_LanguageParameter, audio_LanguageParameter, uploaderParameter, game_File_NameParameter, game_Download_SizeParameter, mDSSUMParameter);
        }
    }
}
